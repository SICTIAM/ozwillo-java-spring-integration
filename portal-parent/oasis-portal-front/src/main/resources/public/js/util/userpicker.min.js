var UserPicker = React.createClass({displayName: "UserPicker", getInitialState: function () {
    return{users: []}
}, init: function () {
    var cpt = this;
    this.props.users(function (data) {
        cpt.setState({users: data})
    }, function () {
        cpt.setState({users: []})
    })
}, componentDidMount: function () {
}, removeUser: function (id) {
    this.setState({users: this.state.users.filter(function (user) {
        return user.userid != id
    })})
}, getSelectedUsers: function () {
    return this.state.users
}, addUser: function (user) {
    if (0 == this.state.users.filter(function (u) {
        return u.userid == user.userid
    }).length) {
        var users = this.state.users;
        users.push(user), this.setState({users: users})
    }
}, render: function () {
    var removeUser = this.removeUser, usersList = this.state.users.map(function (user) {
        return User({key: user.userid, user: user, remove: removeUser})
    });
    return React.DOM.div(null, React.DOM.table({className: "table"}, React.DOM.thead(null, React.DOM.tr(null, React.DOM.th(null, t("name")), React.DOM.th(null, t("actions")))), React.DOM.tbody(null, usersList)), React.DOM.div({className: "row"}, React.DOM.div({className: "col-sm-10 col-sm-offset-1"}, Typeahead({onSelect: this.addUser, source: this.props.source, placeholder: t("settings-add-a-user")}))))
}}), User = React.createClass({displayName: "User", remove: function () {
    this.props.remove(this.props.user.userid)
}, render: function () {
    return React.DOM.tr(null, React.DOM.td(null, this.props.user.fullname), React.DOM.td(null, React.DOM.button({className: "btn btn-default", onClick: this.remove}, React.DOM.i({className: "fa fa-minus-circle"}))))
}});